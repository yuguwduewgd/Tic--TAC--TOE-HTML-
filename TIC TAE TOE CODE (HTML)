<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Tic Tac Toe</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: #f2f2f2;
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-top: 40px;
        }
        h1 {
            margin-bottom: 10px;
        }
        #board {
            display: grid;
            grid-template-columns: repeat(3, 70px);
            grid-template-rows: repeat(3, 70px);
            gap: 5px;
            margin-bottom: 20px;
        }
        .cell {
            background: #fff;
            border: 2px solid #222;
            width: 70px;
            height: 70px;
            font-size: 2.5em;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: background 0.2s;
        }
        .cell:hover {
            background: #e6e6e6;
        }
        #status {
            font-size: 1.2em;
            margin-bottom: 15px;
        }
        #resetBtn {
            padding: 8px 22px;
            font-size: 1em;
            border: none;
            background: #007bff;
            color: #fff;
            border-radius: 5px;
            cursor: pointer;
        }
        #resetBtn:hover {
            background: #0056b3;
        }
    </style>
</head>
<body>
    <h1>Tic Tac Toe</h1>
    <div id="status">Player X's turn</div>
    <div id="board"></div>
    <button id="resetBtn">Reset Game</button>

    <script>
        const board = document.getElementById('board');
        const statusDiv = document.getElementById('status');
        const resetBtn = document.getElementById('resetBtn');

        let currentPlayer = 'X';
        let gameActive = true;
        let boardState = Array(9).fill('');

        function renderBoard() {
            board.innerHTML = '';
            for (let i = 0; i < 9; i++) {
                const cell = document.createElement('div');
                cell.className = 'cell';
                cell.dataset.index = i;
                cell.textContent = boardState[i];
                cell.addEventListener('click', handleCellClick);
                board.appendChild(cell);
            }
        }

        function handleCellClick(e) {
            const index = e.target.dataset.index;
            if (!gameActive || boardState[index]) return;

            boardState[index] = currentPlayer;
            renderBoard();
            if (checkWinner()) {
                statusDiv.textContent = `Player ${currentPlayer} wins!`;
                gameActive = false;
            } else if (boardState.every(cell => cell)) {
                statusDiv.textContent = "It's a draw!";
                gameActive = false;
            } else {
                currentPlayer = currentPlayer === 'X' ? 'Y' : 'X';
                statusDiv.textContent = `Player ${currentPlayer}'s turn`;
            }
        }

        function checkWinner() {
            const winPatterns = [
                [0,1,2],[3,4,5],[6,7,8],
                [0,3,6],[1,4,7],[2,5,8],
                [0,4,8],[2,4,6]
            ];
            return winPatterns.some(pattern => {
                const [a,b,c] = pattern;
                return boardState[a] && boardState[a] === boardState[b] && boardState[a] === boardState[c];
            });
        }

        resetBtn.addEventListener('click', () => {
            boardState = Array(9).fill('');
            currentPlayer = 'X';
            gameActive = true;
            statusDiv.textContent = "Player X's turn";
            renderBoard();
        });

        renderBoard();
    </script>
</body>
</html>
